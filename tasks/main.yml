- name: put a DDL script
  template: src=postgres_exporter.sql dest=/root/postgres_exporter.sql

- name: add extended queries file
  template: src=queries.yml dest=/root/queries.yml

- name: install psql
  apt: name=postgresql-client
  when: "ansible_os_family == 'Debian'"

- name: check if objects already exist
  shell: psql "host={{ postgres_exporter_postgres_host }} port={{ postgres_exporter_postgres_port }} user={{ postgres_exporter_master_user }} dbname=postgres sslmode=disable password={{ postgres_exporter_master_password }}" -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{ postgres_exporter_postgres_user }}'" | grep -v "Tim" | grep -q 1
  register: result
  changed_when: false
  ignore_errors: true

- name: run the DDL script
  command: psql "host={{ postgres_exporter_postgres_host }} port={{ postgres_exporter_postgres_port }} user={{ postgres_exporter_master_user }} dbname=postgres sslmode=disable password={{ postgres_exporter_master_password }}" -f /root/postgres_exporter.sql
  when: result is failed

- name: install docker-py
  pip: name=docker-py

- name: start a PostgreSQL Prometheus exporter container
  docker_container:
    name: postgres-exporter-{{ postgres_exporter_port }}
    image: wrouesnel/postgres_exporter
    state: started
    recreate: yes
    restart_policy: always
    read_only: yes
    exposed_ports:
      - 9187
    ports:
      - "{{ postgres_exporter_host_address }}:{{ postgres_exporter_port }}:9187"
    env:
      DATA_SOURCE_NAME: "user={{ postgres_exporter_postgres_user }} password={{ postgres_exporter_postgres_password }} host={{ postgres_exporter_postgres_host }} sslmode=disable port={{ postgres_exporter_postgres_port }} dbname=postgres"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/root/queries.yml"
      PG_EXPORTER_AUTO_DISCOVER_DATABASES: "true"
